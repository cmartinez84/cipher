<?php
  function cipher_menu(){
    $items['cipher'] = array(
      'title' => 'Cipher',
      'page callback' => 'drupal_get_form',
      'page arguments' => array('cipher_form'),
      'access callback' => TRUE,
      'type' => MENU_NORMAL_ITEM,
    );
    $items['cipher_results_page'] = array(
      'title' => 'Cipher Results Page',
      'page callback' => 'cipher_results',
      'access callback' => TRUE,
      'type' => MENU_CALLBACK,
    );
    return $items;
  }
  function cipher_form(){
    $form['shift_value'] = array(
      '#title' => 'Shift Value',
      '#type' => 'textfield',
      '#description' => t('Enter a number of places you would like each letter shifted'),
      '#required' => TRUE,
      '#element_validate' => array('element_validate_integer_positive'),
    );
    $form['direction'] = array(
      '#title' => 'Direction',
      '#type' => 'textfield',
      '#description' => t('Would you like to shift each letter to the left or right?'),
      '#required' => TRUE,
      '#element_validate' => array('element_validate_direction'),
    );
    $form['phrase'] = array(
      '#title' => 'Entry',
      '#type'=> 'textfield',
      '#description' => t('Enter a string you would like to encrypt'),
      '#required' => TRUE,
      '#element_validate' => array('element_validate_special_char'),
    );
    $form['submit'] = array(
      '#type' => 'submit',
      '#value' => 'Go!',
    );
    return $form;
  }

function element_validate_direction($element){
  $direction = strtolower($element['#value']);
  if($direction != 'right' && $direction != 'left'){
    form_error($element, t('In the West we usually right our alphabets, a-z from "left" to "right". Please type on e of those two directions'));
  }
}
function element_validate_special_char($element){
  $string_all_letters_and_chars = "abcdefghijklmnopqrstuvwxyz,./?;:\"-_! ";
  $accepted_chars = str_split($string_all_letters_and_chars);
  $phrase = strtolower($element['#value']);
  $phrase_array = str_split($phrase);
  foreach ($phrase_array as $key => $letter) {
    if(!in_array($letter, $accepted_chars)){
      form_error($element, t('Only letters and standard puctuation are accepted'));
      break;
    }
  }
}

function cipher_form_submit($form, &$form_state){
  $string_accepted_chars = "abcdefghijklmnopqrstuvwxyz";
  $all_letters = str_split($string_accepted_chars);
  $direction = $form_state['values']['direction'];
  $shift_value = $form_state['values']['shift_value'];
  $phrase = strtolower($form_state['values']['phrase']);
  $phrase_array = str_split($phrase);
  $output = array();
  $shift_value = $shift_value % 26;
  if($direction == "left"){
    $shift_value = 0 - $shift_value;
  }
  foreach ($phrase_array as $key => $letter) {
    if(in_array($letter, $all_letters)){
      $position = array_search($letter, $all_letters);
      if(($position + $shift_value) < 0 ){
        $position = $shift_value + 26 + $position;
        $output[] = $all_letters[$position];
      }
      elseif(($position + $shift_value) > 25){
        $position = $shift_value + $position - 26;
        $output[] = $all_letters[$position];
      }
      else{
        $output[] = $all_letters[$position + $shift_value];
      }
    }
    else{
      $output[] = $letter;
    }
  };
  $_SESSION['results'] = implode($output, "");
  $form_state['redirect'] = 'cipher_results_page';
}
function cipher_results(){
  return $_SESSION['results'];
}
